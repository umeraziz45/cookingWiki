{"version":3,"sources":["hooks/useFetch (1).js","components/Recipelist.js","pages/home/Home.js","pages/create/Create.js","pages/search/Search.js","pages/recipe/Recipe.js","components/Searchbar.js","components/Navbar.js","App.js","index.js"],"names":["useFetch","url","method","useState","data","setData","isPending","setIsPending","error","setError","options","setOptions","postData","headers","body","JSON","stringify","useEffect","controller","AbortController","fetchData","fetchOptions","a","fetch","signal","res","ok","Error","statusText","json","name","console","log","abort","Recipe","recipes","length","className","map","recipe","title","cookingTime","substring","to","id","Home","Create","setTitle","setMethod","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientInput","useRef","history","useHistory","push","onSubmit","e","preventDefault","type","onChange","target","value","required","ref","onClick","ing","trim","includes","prevIngredients","current","focus","ingredient","Search","queryString","useLocation","search","query","URLSearchParams","get","useParams","Searchbar","term","setTerm","htmlFor","Navbar","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4ZAEaA,EAAW,SAACC,GAAwB,IAAnBC,EAAkB,uDAAV,MACpC,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,mBAAS,MAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,SAACA,GAChBD,EAAW,CACTT,OAAO,OACPW,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUJ,MA2CzB,OAvCAK,qBAAU,WACR,IAAMC,EAAa,IAAIC,gBAEjBC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAChBf,GAAa,GADG,kBAIIgB,MAAMtB,EAAD,YAAC,eAAUoB,GAAX,IAAyBG,OAAQN,EAAWM,UAJrD,WAIRC,EAJQ,QAKNC,GALM,sBAMN,IAAIC,MAAMF,EAAIG,YANR,uBAQKH,EAAII,OART,OAQRzB,EARQ,OAUdG,GAAa,GACbF,EAAQD,GACRK,EAAS,MAZK,kDAcG,eAAb,KAAIqB,KACNC,QAAQC,IAAI,0BAEZzB,GAAa,GACbE,EAAS,6BAlBG,0DAAH,sDA8Bf,MAPc,QAAVP,GACFkB,IAEa,SAAXlB,GAAqBQ,GACvBU,EAAUV,GAGL,WACLQ,EAAWe,WAGZ,CAAChC,EAAKS,EAASR,IAEX,CAAEE,OAAME,YAAWE,QAAOI,a,eCnDpB,SAASsB,EAAT,GAA4B,IAAXC,EAAU,EAAVA,QAE9B,OAAuB,IAAnBA,EAAQC,OACH,qBAAKC,UAAU,QAAf,iCAKP,qBAAKA,UAAU,cAAf,SACGF,EAAQG,KAAK,SAAAC,GAAM,OAClB,sBAAqBF,UAAU,OAA/B,UACC,6BAAKE,EAAOC,QACZ,8BAAID,EAAOE,YAAX,eACA,8BAAMF,EAAOrC,OAAOwC,UAAU,EAAG,OACjC,cAAC,IAAD,CAAMC,GAAE,kBAAaJ,EAAOK,IAA5B,yBAJSL,EAAOK,S,MCKVC,MAbf,WAEE,MAAmC7C,EAAS,iCAApCI,EAAR,EAAQA,KAAME,EAAd,EAAcA,UAAWE,EAAzB,EAAyBA,MAEzB,OACE,sBAAK6B,UAAU,OAAf,UACG7B,GAAS,mBAAG6B,UAAU,QAAb,SAAsB7B,IAC/BF,GAAa,mBAAG+B,UAAU,UAAb,wBACbjC,GAAQ,cAAC8B,EAAD,CAAQC,QAAS/B,Q,cCoFjB0C,MA7Ff,WAEE,MAA0B3C,mBAAS,IAAnC,mBAAOqC,EAAP,KAAcO,EAAd,KACA,EAA4B5C,mBAAS,IAArC,mBAAOD,EAAP,KAAe8C,EAAf,KACA,EAAsC7C,mBAAS,IAA/C,mBAAOsC,EAAP,KAAoBQ,EAApB,KACA,EAA0C9C,mBAAS,IAAnD,mBAAO+C,EAAP,KAAsBC,EAAtB,KACA,EAAsChD,mBAAS,IAA/C,mBAAOiD,EAAP,KAAoBC,EAApB,KACMC,EAAkBC,iBAAO,MACzBC,EAAUC,cAEhB,EAA2BzD,EAAS,gCAAiC,QAA7DY,EAAR,EAAQA,SAAUR,EAAlB,EAAkBA,KAyBlB,OANAa,qBAAW,WACLb,GACFoD,EAAQE,KAAK,OAEd,CAACtD,EAAMoD,IAGR,sBAAKnB,UAAU,SAAf,UACE,oBAAIA,UAAU,aAAd,8BAEA,uBAAMsB,SA3BW,SAACC,GACpBA,EAAEC,iBACFjD,EAAS,CAAE4B,QAAOY,cAAalD,SAAQuC,YAAaA,EAAc,cAyBhE,UACE,kCACE,iDACA,uBACAqB,KAAK,OACLC,SAAU,SAACH,GAAD,OAAOb,EAASa,EAAEI,OAAOC,QACnCA,MAAOzB,EACP0B,UAAQ,OAIV,kCACE,sDACA,sBAAK7B,UAAU,cAAf,UACE,uBACEyB,KAAK,OACLC,SAAU,SAACH,GAAD,OAAOT,EAAiBS,EAAEI,OAAOC,QAC3CA,MAAOf,EACPiB,IAAKb,IAEP,wBAAQjB,UAAU,MAAM+B,QA1ChB,SAACR,GACjBA,EAAEC,iBACF,IAAMQ,EAAMnB,EAAcoB,OAEtBD,IAAQjB,EAAYmB,SAASF,IAC/BhB,GAAe,SAAAmB,GAAe,4BAAQA,GAAR,CAAyBH,OAGzDlB,EAAiB,IACjBG,EAAgBmB,QAAQC,SAiChB,uBAIJ,sDAAyBtB,EAAYd,KAAI,SAAAqC,GAAU,OAAI,+BAAsBA,EAAtB,OAASA,SAEhE,kCACE,iDACA,0BACAZ,SAAU,SAACH,GAAD,OAAOZ,EAAUY,EAAEI,OAAOC,QACpCA,MAAO/D,EACPgE,UAAQ,OAIV,kCACE,0DACA,uBACAJ,KAAK,SACLC,SAAU,SAACH,GAAD,OAAOX,EAAeW,EAAEI,OAAOC,QACzCA,MAAOxB,EACPyB,UAAQ,OAIV,wBAAQ7B,UAAU,MAAlB,2B,MCjEOuC,MAlBf,WACE,IAAMC,EAAcC,cAAcC,OAE5BC,EADc,IAAIC,gBAAgBJ,GACdK,IAAI,KAG9B,EAAmClF,EADvB,mCAAqCgF,GACzCxE,EAAR,EAAQA,MAAOF,EAAf,EAAeA,UAAWF,EAA1B,EAA0BA,KAE1B,OACE,gCACE,qBAAIiC,UAAU,aAAd,gCAA+C2C,EAA/C,OACCxE,GAAS,mBAAG6B,UAAU,QAAb,SAAsB7B,IAC/BF,GAAa,mBAAG+B,UAAU,UAAb,2BACbjC,GAAQ,cAAC8B,EAAD,CAAYC,QAAS/B,Q,MCYrB8B,MA1Bf,WAEE,IAAQU,EAAOuC,cAAPvC,GAGR,EAA4C5C,EAFhC,iCAAmC4C,GAEjCT,EAAd,EAAQ/B,KAAeE,EAAvB,EAAuBA,UAAWE,EAAlC,EAAkCA,MAElC,OACE,sBAAK6B,UAAU,SAAf,UACG/B,GAAa,qBAAK+B,UAAU,UAAf,wBACb7B,GAAS,qBAAK6B,UAAU,QAAf,SAAwB7B,IACjC2B,GACC,qCACC,oBAAIE,UAAU,aAAd,SAA4BF,EAAQK,QACpC,uCAAUL,EAAQM,YAAlB,cACA,6BACGN,EAAQiB,YAAYd,KAAK,SAAA+B,GAAG,OAAI,6BAAeA,GAANA,QAE5C,mBAAGhC,UAAU,SAAb,SAAuBF,EAAQjC,gB,YCpBzB,SAASkF,IAEtB,MAAwBjF,mBAAS,IAAjC,mBAAOkF,EAAP,KAAaC,EAAb,KACM9B,EAAUC,cAShB,OACE,qBAAKpB,UAAU,YAAf,SACE,uBAAMsB,SATW,SAACC,GACpBA,EAAEC,iBAGFL,EAAQE,KAAR,oBAA0B2B,KAKxB,UACE,uBAAOE,QAAQ,SAAf,oBACA,uBACAzB,KAAK,OACLlB,GAAG,SACHmB,SAAU,SAACH,GAAD,OAAO0B,EAAQ1B,EAAEI,OAAOC,QAClCC,UAAQ,SCnBD,SAASsB,IACtB,OACE,qBAAKnD,UAAU,SAAf,SACE,gCAEE,cAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,QAAvB,SACE,6CAGF,cAAC,EAAD,IACA,cAAC,IAAD,CAAMM,GAAG,UAAT,SACE,qD,MCyCK8C,MA/Cf,WAgBE,OACE,qBAAKpD,UAAU,MAAf,SACE,eAAC,IAAD,WACA,cAAC,EAAD,IAEE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,EAAD,eC1CZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.30989f5e.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\n\nexport const useFetch = (url, method= \"GET\") => {\n  const [data, setData] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const [error, setError] = useState(null)\n  const [options, setOptions] = useState(null);\n\n  const postData = (postData) => {\n    setOptions({\n      method:\"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(postData)\n    })\n  }\n\n  useEffect(() => {\n    const controller = new AbortController()\n\n    const fetchData = async (fetchOptions) => {\n      setIsPending(true)\n      \n      try {\n        const res = await fetch(url, { ...fetchOptions, signal: controller.signal })\n        if(!res.ok) {\n          throw new Error(res.statusText)\n        }\n        const data = await res.json()\n\n        setIsPending(false)\n        setData(data)\n        setError(null)\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\")\n        } else {\n          setIsPending(false)\n          setError('Could not fetch the data')\n        }\n      }\n    }\n\n    if (method ===\"GET\") {\n      fetchData();\n    }\n    if (method === \"POST\" && options) {\n      fetchData(options);\n    }\n\n    return () => {\n      controller.abort()\n    }\n\n  }, [url, options, method])\n\n  return { data, isPending, error, postData }\n}","// Styles\r\nimport './Recipelist.css';\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Recipe({recipes}) {\r\n\r\n  if (recipes.length === 0) {\r\n    return <div className='error'>No recipes found...</div>}\r\n\r\n  return (\r\n\r\n\r\n    <div className='recipe-list'>\r\n      {recipes.map( recipe => (\r\n        <div key={recipe.id} className=\"card\">\r\n         <h3>{recipe.title}</h3>\r\n         <p>{recipe.cookingTime} to make.</p>\r\n         <div>{recipe.method.substring(0, 100)}</div>\r\n         <Link to={`recipes/${recipe.id}`}>Cook This</Link>\r\n        </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n","import { useFetch } from '../../hooks/useFetch (1)';\r\n\r\n// Import Components\r\nimport Recipe from '../../components/Recipelist';\r\n\r\n// Import Style\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n\r\n  const { data, isPending, error } = useFetch('http://localhost:3000/recipes');\r\n\r\n  return (\r\n    <div className='home'>\r\n      {error && <p className='error'>{error}</p>}\r\n      {isPending && <p className='loading'>Loading...</p> }\r\n      {data && <Recipe recipes={data} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { useFetch } from '../../hooks/useFetch (1)';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Import Styles\r\nimport './Create.css';\r\n\r\nfunction Create() {\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [method, setMethod] = useState('');\r\n  const [cookingTime, setCookingTime] = useState('');\r\n  const [newIngredient, setNewIngredient] = useState('');\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const ingredientInput = useRef(null);\r\n  const history = useHistory()\r\n\r\n  const { postData, data } = useFetch(\"http://localhost:3000/recipes\", \"POST\")\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postData({ title, ingredients, method, cookingTime: cookingTime + ' minutes' });\r\n  }\r\n\r\n  const handleAdd = (e) =>{\r\n    e.preventDefault();\r\n    const ing = newIngredient.trim();\r\n\r\n    if (ing && !ingredients.includes(ing)) {\r\n      setIngredients(prevIngredients => [...prevIngredients, ing]); \r\n    }\r\n\r\n    setNewIngredient('');\r\n    ingredientInput.current.focus()\r\n  }\r\n\r\n  useEffect( () => {\r\n    if (data) {\r\n      history.push('/');\r\n    }\r\n  }, [data, history])\r\n\r\n  return (\r\n    <div className='create'>\r\n      <h2 className='page-title'>Add a New Recipe</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Recipe Title:</span>\r\n          <input \r\n          type=\"text\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          value={title}\r\n          required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Recipe Ingredients</span>\r\n          <div className=\"ingredients\">\r\n            <input \r\n              type=\"text\" \r\n              onChange={(e) => setNewIngredient(e.target.value)}\r\n              value={newIngredient}\r\n              ref={ingredientInput}\r\n            />\r\n            <button className='btn' onClick={handleAdd}>Add</button>\r\n\r\n          </div>\r\n        </label>\r\n        <p>Current Ingredients: {ingredients.map(ingredient => <em key={ingredient}>{ingredient}, </em> )}</p>\r\n\r\n        <label>\r\n          <span>Recipe Method</span>\r\n          <textarea \r\n          onChange={(e) => setMethod(e.target.value)}\r\n          value={method}\r\n          required\r\n          />\r\n        </label>\r\n\r\n        <label >\r\n          <span>Cooking Time (minutes)</span>\r\n          <input \r\n          type=\"number\"\r\n          onChange={(e) => setCookingTime(e.target.value)}\r\n          value={cookingTime}\r\n          required\r\n           />\r\n        </label>\r\n\r\n        <button className='btn'>submit</button>\r\n\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Create","import { useLocation } from 'react-router-dom';\r\nimport { useFetch } from '../../hooks/useFetch (1)';\r\n\r\n// Import Style\r\nimport './Search.css'\r\n\r\nimport Recipelist from '../../components/Recipelist';\r\n\r\nfunction Search() {\r\n  const queryString = useLocation().search;\r\n  const queryParams = new URLSearchParams(queryString);\r\n  const query = queryParams.get('q');\r\n\r\n  const url = 'http://localhost:3000/recipes?q=' + query;\r\n  const { error, isPending, data } = useFetch(url);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='page-title'>Recipes Including \"{query}\"</h2>\r\n      {error && <p className='error'>{error}</p>}\r\n      {isPending && <p className='loading'>Is Loading...</p>}\r\n      {data && <Recipelist recipes={data} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","import { useFetch } from '../../hooks/useFetch (1)';\r\n// import { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// Import Style\r\nimport './Recipe.css';\r\n\r\nfunction Recipe( ) {\r\n\r\n  const { id } = useParams();\r\n  const url = \"http://localhost:3000/recipes/\" + id;\r\n\r\n  const { data: recipes, isPending, error } = useFetch(url);\r\n\r\n  return (\r\n    <div className=\"recipe\">\r\n      {isPending && <div className='loading'>Loading...</div>}\r\n      {error && <div className='error'>{error}</div>}\r\n      {recipes && (\r\n        <>\r\n         <h2 className='page-title'>{recipes.title}</h2>\r\n         <p>Takes {recipes.cookingTime} to make</p>\r\n         <ul>\r\n           {recipes.ingredients.map( ing => <li key={ing}>{ing}</li>)}\r\n         </ul>\r\n         <p className='method'>{recipes.method}</p>\r\n        \r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recipe","// Import styles\r\nimport './Searchbar.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Searchbar() {\r\n\r\n  const [term, setTerm] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // ?q=\r\n    history.push(`/search?q=${term}`)\r\n  }\r\n\r\n  return (\r\n    <div className='searchbar'>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"search\">Search</label>\r\n        <input \r\n        type=\"text\" \r\n        id='search'\r\n        onChange={(e) => setTerm(e.target.value)}\r\n        required\r\n        />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom';\r\n\r\n//  Style\r\nimport './Navbar.css';\r\nimport Searchbar from './Searchbar';\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div className='navbar'>\r\n      <nav>\r\n\r\n        <Link to='/' className='brand'>\r\n          <h1>Cook Book</h1>\r\n        \r\n        </Link>\r\n        <Searchbar />\r\n        <Link to=\"/create\">\r\n          <p>Create Recipe</p>\r\n        </Link>\r\n\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// Page Components\nimport Home from './pages/home/Home';\nimport Create from './pages/create/Create';\nimport Search from './pages/search/Search';\nimport Recipe from './pages/recipe/Recipe';\nimport Navbar from './components/Navbar';\n\nimport './App.css'\n\nfunction App() {\n  // Pages and Router Setup\n    // Create four different components that make our four 'pages'\n    // Import react router, Route, switch etc and the components \n    // Setup the routes in App.js\n\n  // Making Navbar component\n    // Create Nav component and place it inside browserrouter but above all the routes so its present on all pages\n\n  // Fetching Data\n    // import the useFetch custom hook and setting up our HTML w/ conditionals\n  \n  // Recipe Component\n    // Will create a seperte component for recipes and nest it inside Home component's map function\n    // This is done so it is re-usable elsewhere\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Navbar />\n\n        <Switch>\n\n          <Route exact path='/'>\n            <Home/>\n          </Route>\n\n          <Route path=\"/create\">\n            <Create/>\n          </Route>\n\n          <Route path=\"/search\">\n            <Search/>\n          </Route>\n\n          <Route path=\"/recipes/:id\">\n            <Recipe/>\n          </Route>\n\n        </Switch>\n\n      </BrowserRouter>\n      \n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}